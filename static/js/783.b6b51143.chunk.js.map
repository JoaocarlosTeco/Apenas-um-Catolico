{"version":3,"file":"static/js/783.b6b51143.chunk.js","mappings":"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","sources":["components/SEO.tsx","components/OptimizedImage.tsx","components/Card.tsx","pages/Santos.js"],"sourcesContent":["import React from 'react';\r\nimport { getLogoPath } from '../utils/imageUtils';\r\nimport { Helmet } from 'react-helmet';\r\nimport { BaseComponentProps, BreadcrumbItem } from '../types';\r\n\r\ninterface ArticleData {\r\n  title: string;\r\n  description: string;\r\n  image?: string;\r\n  author?: string;\r\n  about?: string;\r\n  faqs?: Array<{\r\n    question: string;\r\n    answer: string;\r\n  }>;\r\n}\r\n\r\ninterface SaintData {\r\n  name: string;\r\n  description: string;\r\n  birthDate?: string;\r\n  deathDate?: string;\r\n  birthPlace?: string;\r\n  nationality?: string;\r\n  canonizationDate?: string;\r\n  feastDay?: string;\r\n  patronOf?: string[];\r\n  image?: string;\r\n  externalLinks?: string[];\r\n  attributes?: string[];\r\n}\r\n\r\ninterface PrayerData {\r\n  title: string;\r\n  description: string;\r\n  text: string;\r\n  author?: string;\r\n  dateCreated?: string;\r\n}\r\n\r\ninterface SEOProps extends BaseComponentProps {\r\n  title?: string;\r\n  description?: string;\r\n  keywords?: string;\r\n  image?: string;\r\n  url?: string;\r\n  type?: string;\r\n  author?: string;\r\n  structuredData?: Record<string, any> | null;\r\n  breadcrumbs?: BreadcrumbItem[];\r\n  article?: ArticleData | null;\r\n  saint?: SaintData | null;\r\n  prayer?: PrayerData | null;\r\n  publishedTime?: string | null;\r\n  modifiedTime?: string | null;\r\n  category?: string | null;\r\n  tags?: string[];\r\n}\r\n\r\nconst SEO: React.FC<SEOProps> = ({ \r\n  title = \"Apenas um Católico - Evangelização e Devoção\",\r\n  description = \"Site católico dedicado à evangelização e devoção aos santos. Conheça a história dos santos, orações e reflexões espirituais.\",\r\n  keywords = \"católico, santos, orações, evangelização, fé, devoção, religião, cristianismo\",\r\n  image = getLogoPath(\"Logo tipo apenas um catolico.png\"),\r\n  url = \"https://apenas-um-catolico.vercel.app\",\r\n  type = \"website\",\r\n  author = \"Apenas um Católico\",\r\n  structuredData = null,\r\n  breadcrumbs = [],\r\n  article = null,\r\n  saint = null,\r\n  prayer = null,\r\n  publishedTime = null,\r\n  modifiedTime = null,\r\n  category = null,\r\n  tags = []\r\n}) => {\r\n  const siteTitle = \"Apenas um Católico\";\r\n  const fullTitle = title === siteTitle ? title : `${title} - ${siteTitle}`;\r\n\r\n  // Structured Data para o site\r\n  const websiteSchema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"WebSite\",\r\n    \"name\": siteTitle,\r\n    \"description\": description,\r\n    \"url\": url,\r\n    \"publisher\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": siteTitle,\r\n      \"url\": url,\r\n      \"logo\": {\r\n        \"@type\": \"ImageObject\",\r\n        \"url\": `${url}${image}`,\r\n        \"width\": 512,\r\n        \"height\": 512\r\n      },\r\n      \"sameAs\": [\r\n        \"https://www.facebook.com/apenasumcatolico\",\r\n        \"https://www.instagram.com/apenasumcatolico\"\r\n      ]\r\n    },\r\n    \"potentialAction\": {\r\n      \"@type\": \"SearchAction\",\r\n      \"target\": `${url}/buscar?q={search_term_string}`,\r\n      \"query-input\": \"required name=search_term_string\"\r\n    }\r\n  };\r\n\r\n  // Structured Data para organização religiosa\r\n  const religiousOrganizationSchema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"ReligiousOrganization\",\r\n    \"name\": siteTitle,\r\n    \"description\": \"Plataforma digital católica dedicada à evangelização, educação religiosa e devoção aos santos\",\r\n    \"url\": url,\r\n    \"religion\": \"Christianity\",\r\n    \"denomination\": \"Catholic\",\r\n    \"founder\": author,\r\n    \"foundingDate\": \"2023\",\r\n    \"mission\": \"Evangelizar através da tecnologia, compartilhando a vida dos santos e ensinamentos católicos\",\r\n    \"serviceArea\": {\r\n      \"@type\": \"Country\",\r\n      \"name\": \"Brasil\"\r\n    },\r\n    \"audience\": {\r\n      \"@type\": \"Audience\",\r\n      \"audienceType\": \"Catholics, Christians, Faith seekers\"\r\n    }\r\n  };\r\n\r\n  // Breadcrumbs Schema\r\n  const breadcrumbSchema = breadcrumbs.length > 0 ? {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    \"itemListElement\": breadcrumbs.map((item, index) => ({\r\n      \"@type\": \"ListItem\",\r\n      \"position\": index + 1,\r\n      \"name\": item.name,\r\n      \"item\": `${url}${item.url}`\r\n    }))\r\n  } : null;\r\n\r\n  // Schema para artigo/blog post\r\n  const articleSchema = article ? {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Article\",\r\n    \"headline\": article.title,\r\n    \"description\": article.description,\r\n    \"image\": `${url}${article.image || image}`,\r\n    \"author\": {\r\n      \"@type\": \"Person\",\r\n      \"name\": article.author || author\r\n    },\r\n    \"publisher\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": siteTitle,\r\n      \"logo\": {\r\n        \"@type\": \"ImageObject\",\r\n        \"url\": `${url}${image}`\r\n      }\r\n    },\r\n    \"datePublished\": publishedTime,\r\n    \"dateModified\": modifiedTime || publishedTime,\r\n    \"mainEntityOfPage\": {\r\n      \"@type\": \"WebPage\",\r\n      \"@id\": url\r\n    },\r\n    \"keywords\": tags.join(\", \"),\r\n    \"articleSection\": category,\r\n    \"about\": article.about || \"Catholic faith, spirituality, saints\"\r\n  } : null;\r\n\r\n  // Schema específico para santos\r\n  const saintSchema = saint ? {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Person\",\r\n    \"name\": saint.name,\r\n    \"description\": saint.description,\r\n    \"birthDate\": saint.birthDate,\r\n    \"deathDate\": saint.deathDate,\r\n    \"birthPlace\": saint.birthPlace,\r\n    \"nationality\": saint.nationality,\r\n    \"religion\": \"Christianity\",\r\n    \"denomination\": \"Catholic\",\r\n    \"canonizationDate\": saint.canonizationDate,\r\n    \"feastDay\": saint.feastDay,\r\n    \"patronOf\": saint.patronOf,\r\n    \"image\": `${url}${saint.image || image}`,\r\n    \"sameAs\": saint.externalLinks || [],\r\n    \"knowsAbout\": saint.attributes || [],\r\n    \"worksFor\": {\r\n      \"@type\": \"ReligiousOrganization\",\r\n      \"name\": \"Catholic Church\"\r\n    },\r\n    \"additionalType\": \"Saint\",\r\n    \"mainEntityOfPage\": {\r\n      \"@type\": \"WebPage\",\r\n      \"@id\": url\r\n    }\r\n  } : null;\r\n\r\n  // Schema para orações\r\n  const prayerSchema = prayer ? {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"CreativeWork\",\r\n    \"name\": prayer.title,\r\n    \"description\": prayer.description,\r\n    \"text\": prayer.text,\r\n    \"inLanguage\": \"pt-BR\",\r\n    \"genre\": \"Prayer\",\r\n    \"author\": prayer.author || \"Catholic Tradition\",\r\n    \"publisher\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": siteTitle\r\n    },\r\n    \"dateCreated\": prayer.dateCreated,\r\n    \"audience\": {\r\n      \"@type\": \"Audience\",\r\n      \"audienceType\": \"Catholics\"\r\n    },\r\n    \"about\": {\r\n      \"@type\": \"Thing\",\r\n      \"name\": \"Catholic Prayer\",\r\n      \"description\": \"Traditional Catholic prayer for spiritual devotion\"\r\n    },\r\n    \"isPartOf\": {\r\n      \"@type\": \"Collection\",\r\n      \"name\": \"Catholic Prayers Collection\"\r\n    }\r\n  } : null;\r\n\r\n  // FAQ Schema (se aplicável)\r\n  const faqSchema = article?.faqs ? {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"FAQPage\",\r\n    \"mainEntity\": article.faqs.map(faq => ({\r\n      \"@type\": \"Question\",\r\n      \"name\": faq.question,\r\n      \"acceptedAnswer\": {\r\n        \"@type\": \"Answer\",\r\n        \"text\": faq.answer\r\n      }\r\n    }))\r\n  } : null;\r\n\r\n  // Combinar todos os schemas\r\n  const allSchemas = [\r\n    websiteSchema,\r\n    religiousOrganizationSchema,\r\n    breadcrumbSchema,\r\n    articleSchema,\r\n    saintSchema,\r\n    prayerSchema,\r\n    faqSchema,\r\n    structuredData\r\n  ].filter(Boolean);\r\n\r\n  return (\r\n    <Helmet>\r\n      {/* Título da página */}\r\n      <title>{fullTitle}</title>\r\n      \r\n      {/* Meta tags básicas */}\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keywords\" content={keywords} />\r\n      <meta name=\"author\" content={author} />\r\n      <meta name=\"robots\" content=\"index,follow\" />\r\n      <meta name=\"language\" content=\"Portuguese\" />\r\n      \r\n      {/* Open Graph / Facebook */}\r\n      <meta property=\"og:type\" content={type} />\r\n      <meta property=\"og:url\" content={url} />\r\n      <meta property=\"og:title\" content={fullTitle} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={`${url}${image}`} />\r\n      <meta property=\"og:site_name\" content={siteTitle} />\r\n      <meta property=\"og:locale\" content=\"pt_BR\" />\r\n      \r\n      {/* Twitter */}\r\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta property=\"twitter:url\" content={url} />\r\n      <meta property=\"twitter:title\" content={fullTitle} />\r\n      <meta property=\"twitter:description\" content={description} />\r\n      <meta property=\"twitter:image\" content={`${url}${image}`} />\r\n      \r\n      {/* Article specific meta tags */}\r\n      {article && (\r\n        <>\r\n          <meta property=\"article:author\" content={article.author || author} />\r\n          {publishedTime && <meta property=\"article:published_time\" content={publishedTime} />}\r\n          {modifiedTime && <meta property=\"article:modified_time\" content={modifiedTime} />}\r\n          {category && <meta property=\"article:section\" content={category} />}\r\n          {tags.map(tag => (\r\n            <meta key={tag} property=\"article:tag\" content={tag} />\r\n          ))}\r\n        </>\r\n      )}\r\n      \r\n      {/* PWA Meta tags */}\r\n      <meta name=\"theme-color\" content=\"#1B3358\" />\r\n      <meta name=\"msapplication-navbutton-color\" content=\"#1B3358\" />\r\n      <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\r\n      <meta name=\"mobile-web-app-capable\" content=\"yes\" />\r\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n      \r\n      {/* Canonical URL */}\r\n      <link rel=\"canonical\" href={url} />\r\n      \r\n      {/* Structured Data */}\r\n      {allSchemas.map((schema, index) => (\r\n        <script key={index} type=\"application/ld+json\">\r\n          {JSON.stringify(schema)}\r\n        </script>\r\n      ))}\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SEO;\r\n\r\n// Componente auxiliar para Breadcrumbs\r\ninterface BreadcrumbsProps extends BaseComponentProps {\r\n  items: BreadcrumbItem[];\r\n}\r\n\r\nexport const Breadcrumbs: React.FC<BreadcrumbsProps> = ({ items, className }) => {\r\n  if (!items || items.length === 0) return null;\r\n\r\n  return (\r\n    <nav aria-label=\"breadcrumb\" className={className}>\r\n      <ol style={{ display: 'flex', listStyle: 'none', padding: 0, margin: 0 }}>\r\n        {items.map((item, index) => (\r\n          <li key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n            {index > 0 && <span style={{ margin: '0 0.5rem' }}>/</span>}\r\n            {index === items.length - 1 ? (\r\n              <span aria-current=\"page\">{item.name}</span>\r\n            ) : (\r\n              <a href={item.url} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                {item.name}\r\n              </a>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}; ","// @ts-nocheck\r\nimport React, { useState, useEffect, useRef, memo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BaseComponentProps } from '../types';\r\n\r\ninterface StyledProps {\r\n  height?: string | undefined;\r\n  borderRadius?: string | undefined;\r\n  objectFit?: string | undefined;\r\n  objectPosition?: string | undefined;\r\n  loaded?: boolean;\r\n  show?: boolean;\r\n  theme?: any;\r\n}\r\n\r\nconst ImageContainer = styled.div<StyledProps>`\r\n  position: relative;\r\n  width: 100%;\r\n  height: ${props => props.height || 'auto'};\r\n  overflow: hidden;\r\n  border-radius: ${props => props.borderRadius || '8px'};\r\n  background-color: ${props => props.theme.colors.borderColor};\r\n`;\r\n\r\nconst Image = styled.img<StyledProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: ${props => props.objectFit || 'cover'};\r\n  object-position: ${props => props.objectPosition || 'center'};\r\n  transition: all 0.3s ease;\r\n  opacity: ${props => props.loaded ? 1 : 0};\r\n  transform: ${props => props.loaded ? 'scale(1)' : 'scale(1.02)'};\r\n`;\r\n\r\nconst PlaceholderContainer = styled.div<StyledProps>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(90deg, \r\n    ${props => props.theme.colors.borderColor} 25%, \r\n    ${props => props.theme.colors.background} 50%, \r\n    ${props => props.theme.colors.borderColor} 75%\r\n  );\r\n  background-size: 200% 100%;\r\n  animation: ${props => props.show ? 'loading-shimmer 2s infinite' : 'none'};\r\n  opacity: ${props => props.show ? 1 : 0};\r\n  transition: opacity 0.3s ease;\r\n\r\n  @keyframes loading-shimmer {\r\n    0% { background-position: 200% 0; }\r\n    100% { background-position: -200% 0; }\r\n  }\r\n`;\r\n\r\nconst PlaceholderIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.theme.colors.textSecondary};\r\n  opacity: 0.3;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &::before {\r\n    content: '📷';\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n\r\ninterface IntersectionObserverOptions {\r\n  threshold?: number;\r\n  rootMargin?: string;\r\n}\r\n\r\n// Hook para Intersection Observer\r\nconst useIntersectionObserver = (options: IntersectionObserverOptions = {}) => {\r\n  const [isIntersecting, setIsIntersecting] = useState<boolean>(false);\r\n  const [hasIntersected, setHasIntersected] = useState<boolean>(false);\r\n  const elementRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const element = elementRef.current;\r\n    if (!element) return;\r\n\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n      if (entry.isIntersecting && !hasIntersected) {\r\n        setHasIntersected(true);\r\n      }\r\n    }, {\r\n      threshold: 0.1,\r\n      rootMargin: '50px',\r\n      ...options\r\n    });\r\n\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      if (element) {\r\n        observer.unobserve(element);\r\n      }\r\n    };\r\n  }, [hasIntersected, options]);\r\n\r\n  return [elementRef, isIntersecting, hasIntersected] as const;\r\n};\r\n\r\ninterface OptimizedImageProps extends BaseComponentProps {\r\n  src: string;\r\n  alt: string;\r\n  width?: string | number;\r\n  height?: string;\r\n  objectFit?: 'cover' | 'contain' | 'fill' | 'none' | 'scale-down';\r\n  objectPosition?: string;\r\n  borderRadius?: string;\r\n  placeholder?: boolean;\r\n  lazy?: boolean;\r\n  onLoad?: (e: React.SyntheticEvent<HTMLImageElement>) => void;\r\n  onError?: (e: React.SyntheticEvent<HTMLImageElement>) => void;\r\n  style?: React.CSSProperties;\r\n  sizes?: string;\r\n  srcSet?: string;\r\n}\r\n\r\nconst OptimizedImage = memo<OptimizedImageProps>(({\r\n  src,\r\n  alt,\r\n  width,\r\n  height,\r\n  objectFit = 'cover',\r\n  objectPosition = 'center',\r\n  borderRadius = '8px',\r\n  placeholder = true,\r\n  lazy = true,\r\n  onLoad,\r\n  onError,\r\n  className,\r\n  style,\r\n  sizes,\r\n  srcSet,\r\n  ...props\r\n}) => {\r\n  const [loaded, setLoaded] = useState<boolean>(false);\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [imageRef, , hasIntersected] = useIntersectionObserver();\r\n\r\n  // Determinar se deve carregar a imagem\r\n  const shouldLoad = lazy ? hasIntersected : true;\r\n\r\n  const handleLoad = useCallback((e: Event) => {\r\n    setLoaded(true);\r\n    setError(false);\r\n    onLoad?.(e as any);\r\n  }, [onLoad]);\r\n\r\n  const handleError = useCallback((e: Event) => {\r\n    setError(true);\r\n    setLoaded(false);\r\n    onError?.(e as any);\r\n  }, [onError]);\r\n\r\n  // Preload da imagem quando deve carregar\r\n  useEffect(() => {\r\n    if (!shouldLoad || !src) return;\r\n\r\n    const img = document.createElement('img');\r\n    img.onload = handleLoad;\r\n    img.onerror = handleError;\r\n    img.src = src;\r\n\r\n    return () => {\r\n      img.onload = null;\r\n      img.onerror = null;\r\n    };\r\n  }, [shouldLoad, src, handleLoad, handleError]);\r\n\r\n  return (\r\n    <ImageContainer \r\n      ref={imageRef}\r\n      height={height || '100%'}\r\n      borderRadius={borderRadius}\r\n      className={className}\r\n      style={style}\r\n      {...props}\r\n    >\r\n      {shouldLoad && src && (\r\n        <Image\r\n          src={src}\r\n          alt={alt}\r\n          width={width}\r\n          height={height || '100%'}\r\n          objectFit={objectFit}\r\n          objectPosition={objectPosition}\r\n          loaded={loaded && !error}\r\n          sizes={sizes}\r\n          srcSet={srcSet}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n        />\r\n      )}\r\n\r\n      {placeholder && !loaded && !error && (\r\n        <PlaceholderContainer show={true}>\r\n          <PlaceholderIcon />\r\n        </PlaceholderContainer>\r\n      )}\r\n\r\n      {error && (\r\n        <ErrorContainer>\r\n          <PlaceholderIcon />\r\n          <div style={{ marginTop: '8px', fontSize: '0.8rem' }}>\r\n            Erro ao carregar imagem\r\n          </div>\r\n        </ErrorContainer>\r\n      )}\r\n    </ImageContainer>\r\n  );\r\n});\r\n\r\nOptimizedImage.displayName = 'OptimizedImage';\r\n\r\nexport default OptimizedImage;\r\n\r\n// HOC para adicionar otimização de imagem a componentes existentes\r\nexport const withImageOptimization = <P extends object>(\r\n  Component: React.ComponentType<P>\r\n): React.FC<P & OptimizedImageProps> => {\r\n  const WrappedComponent: React.FC<P & OptimizedImageProps> = (props) => {\r\n    const { src, alt, ...restProps } = props;\r\n    \r\n    return (\r\n      <Component {...(restProps as P)}>\r\n        <OptimizedImage src={src} alt={alt} />\r\n      </Component>\r\n    );\r\n  };\r\n\r\n  WrappedComponent.displayName = `withImageOptimization(${Component.displayName || Component.name})`;\r\n  \r\n  return WrappedComponent;\r\n}; ","import styled from 'styled-components';\r\nimport { BaseComponentProps, ResponsiveProps } from '../types';\r\n\r\ninterface CardProps extends BaseComponentProps, ResponsiveProps {\r\n  padding?: string;\r\n  shadow?: 'none' | 'subtle' | 'soft' | 'medium' | 'strong';\r\n  hover?: boolean;\r\n  maxWidth?: string;\r\n  variant?: 'default' | 'elevated' | 'outlined';\r\n}\r\n\r\ninterface CardGridProps extends BaseComponentProps {\r\n  columns?: number;\r\n  gap?: string;\r\n  minWidth?: string;\r\n}\r\n\r\nexport const Card = styled.div<CardProps>`\r\n  background: ${props => props.theme.colors.surface || 'white'};\r\n  border-radius: ${props => props.theme.borderRadius?.lg || '16px'};\r\n  padding: ${props => props.padding || '2rem'};\r\n  border: ${props => props.variant === 'outlined' ? `1px solid ${props.theme.colors.textSecondary || 'rgba(0, 0, 0, 0.1)'}` : 'none'};\r\n  \r\n  box-shadow: ${props => {\r\n    const shadows = {\r\n      none: 'none',\r\n      subtle: '0 1px 3px rgba(0, 0, 0, 0.04), 0 1px 2px rgba(0, 0, 0, 0.02)',\r\n      soft: '0 4px 8px rgba(0, 0, 0, 0.04), 0 2px 4px rgba(0, 0, 0, 0.02)',\r\n      medium: '0 8px 16px rgba(0, 0, 0, 0.06), 0 4px 6px rgba(0, 0, 0, 0.04)',\r\n      strong: '0 16px 32px rgba(0, 0, 0, 0.08), 0 8px 16px rgba(0, 0, 0, 0.06)'\r\n    };\r\n    \r\n    if (props.variant === 'elevated') {\r\n      return shadows.medium;\r\n    }\r\n    \r\n    return shadows[props.shadow || 'soft'];\r\n  }};\r\n  \r\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\r\n  max-width: ${props => props.maxWidth || 'none'};\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  /* Sutil highlight interno */\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 1px;\r\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);\r\n    opacity: 0;\r\n    transition: opacity 0.25s ease;\r\n  }\r\n  \r\n  ${props => props.hover && `\r\n    &:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08), 0 6px 12px rgba(0, 0, 0, 0.06);\r\n      \r\n      &::before {\r\n        opacity: 1;\r\n      }\r\n    }\r\n    \r\n    &:active {\r\n      transform: translateY(0);\r\n      transition: transform 0.1s ease;\r\n    }\r\n  `}\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    padding: ${props => props.padding || '1.5rem'};\r\n    border-radius: ${props => props.theme.borderRadius?.md || '12px'};\r\n    \r\n    ${props => props.hover && `\r\n      &:hover {\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.06), 0 4px 8px rgba(0, 0, 0, 0.04);\r\n      }\r\n    `}\r\n  }\r\n`;\r\n\r\nexport const CardGrid = styled.div<CardGridProps>`\r\n  display: grid;\r\n  grid-template-columns: repeat(\r\n    auto-fit, \r\n    minmax(${props => props.minWidth || '300px'}, 1fr)\r\n  );\r\n  gap: ${props => props.gap || '2rem'};\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 1.5rem;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    grid-template-columns: 1fr;\r\n    gap: ${props => props.gap || '1.5rem'};\r\n    padding: 0 1rem;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  color: ${props => props.theme.colors.primary};\r\n  margin-bottom: 1rem;\r\n  font-size: ${props => props.theme.fontSize?.lg || '1.25rem'};\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n  letter-spacing: -0.01em;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    font-size: ${props => props.theme.fontSize?.md || '1.125rem'};\r\n    margin-bottom: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const CardText = styled.p`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  line-height: 1.6;\r\n  font-size: ${props => props.theme.fontSize?.md || '1rem'};\r\n  margin: 0;\r\n  margin-bottom: 1.5rem;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    font-size: ${props => props.theme.fontSize?.sm || '0.9rem'};\r\n    line-height: 1.5;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CardActions = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    gap: 0.75rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CardImage = styled.div`\r\n  margin: -2rem -2rem 1.5rem -2rem;\r\n  border-radius: ${props => props.theme.borderRadius?.lg || '16px'} ${props => props.theme.borderRadius?.lg || '16px'} 0 0;\r\n  overflow: hidden;\r\n  \r\n  img {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  &:hover img {\r\n    transform: scale(1.02);\r\n  }\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    margin: -1.5rem -1.5rem 1rem -1.5rem;\r\n    border-radius: ${props => props.theme.borderRadius?.md || '12px'} ${props => props.theme.borderRadius?.md || '12px'} 0 0;\r\n    \r\n    img {\r\n      height: 160px;\r\n    }\r\n  }\r\n`; ","import React from 'react';\r\nimport { getSantoImagePath } from '../utils/imageUtils';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { Card, CardGrid } from '../components/Card';\r\nimport SEO from '../components/SEO';\r\nimport OptimizedImage from '../components/OptimizedImage';\r\n\r\nconst santos = [\r\n  {\r\n    id: 4,\r\n    name: 'São Francisco de Assis',\r\n    image: getSantoImagePath('São franciso.jpg'),\r\n    description: 'Padroeiro dos animais e da ecologia',\r\n    link: '/santos/sao-francisco'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Santa Teresinha',\r\n    image: getSantoImagePath('Santa terezinha.jpg'),\r\n    description: 'Doutora da Igreja e padroeira das missões.'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'São Padre Pio',\r\n    image: getSantoImagePath('Padre-Pio.webp'),\r\n    description: 'Padre estigmatizado e confessor.'\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Nossa Senhora',\r\n    image: getSantoImagePath('Nossa senhora.webp'),\r\n    description: 'Mãe de Jesus e nossa intercessora.'\r\n  }\r\n];\r\n\r\nconst PageContainer = styled.div`\r\n  padding: 40px 0;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    padding: 20px 0;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  text-align: center;\r\n  margin: ${props => props.theme.spacing.xxl} 0;\r\n  color: ${props => props.theme.colors.primary};\r\n  font-size: clamp(2rem, 5vw, 3rem);\r\n  position: relative;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    font-size: 1.8rem;\r\n    margin: ${props => props.theme.spacing.xl} 0;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -10px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 60px;\r\n    height: 3px;\r\n    background: ${props => props.theme.colors.secondary};\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst SantoContainer = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nconst SantoCard = styled(Card)`\r\n  overflow: hidden;\r\n  position: relative;\r\n  padding: 0;\r\n  cursor: pointer;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n    display: block;\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      transform: scale(1.05);\r\n    }\r\n\r\n    &::after {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(27, 51, 88, 0) 0%,\r\n      rgba(27, 51, 88, 0.8) 100%\r\n    );\r\n    opacity: 0;\r\n    transition: opacity ${props => props.theme.transitions.normal};\r\n  }\r\n`;\r\n\r\nconst SantoImage = styled.img`\r\n  width: 100%;\r\n  height: 300px;\r\n  object-fit: cover;\r\n  border-bottom: 3px solid ${props => props.theme.colors.secondary};\r\n  transition: transform ${props => props.theme.transitions.normal};\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    height: 200px;\r\n    border-bottom-width: 2px;\r\n  }\r\n`;\r\n\r\nconst SantoInfo = styled.div`\r\n  padding: 24px;\r\n  text-align: center;\r\n  position: relative;\r\n  z-index: 2;\r\n  background: ${props => props.theme.colors.white};\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    padding: 16px;\r\n  }\r\n\r\n  h2 {\r\n    color: ${props => props.theme.colors.primary};\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.5rem;\r\n    transition: color ${props => props.theme.transitions.normal};\r\n\r\n    @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n      font-size: 1.1rem;\r\n      margin-bottom: 0.3rem;\r\n    }\r\n  }\r\n  \r\n  p {\r\n    color: ${props => props.theme.colors.textLight};\r\n    font-size: 1rem;\r\n    transition: color ${props => props.theme.transitions.normal};\r\n\r\n    @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n      font-size: 0.85rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PlaceholderText = styled.p`\r\n  color: ${props => props.theme.colors.textLight};\r\n  font-style: italic;\r\n  margin-top: 1rem;\r\n  font-size: 0.9rem;\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    font-size: 0.8rem;\r\n    margin-top: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Santos = () => {\r\n  return (\r\n    <PageContainer>\r\n      <SEO\r\n        title=\"Santos\"\r\n        description=\"Conheça a história dos santos católicos. Exemplos de fé, amor e devoção que inspiram nossa jornada espiritual.\"\r\n        keywords=\"santos católicos, São Francisco, Santa Teresinha, Padre Pio, Nossa Senhora, fé, devoção\"\r\n        url=\"https://apenas-um-catolico.vercel.app/santos\"\r\n        structuredData={{\r\n          \"@context\": \"https://schema.org\",\r\n          \"@type\": \"CollectionPage\",\r\n          \"name\": \"Santos que Inspiram\",\r\n          \"description\": \"Conheça a história dos santos católicos. Exemplos de fé, amor e devoção que inspiram nossa jornada espiritual.\",\r\n          \"url\": \"https://apenas-um-catolico.vercel.app/santos\"\r\n        }}\r\n      />\r\n      <PageTitle>Santos que Inspiram</PageTitle>\r\n      <SantoContainer>\r\n        <CardGrid>\r\n          {santos.map((santo, idx) => (\r\n            <SantoCard\r\n              key={santo.id}\r\n              isClickable={!!santo.link}\r\n              whileHover={santo.link ? { y: -10 } : {}}\r\n              initial={{ opacity: 0, y: 30 }}\r\n              whileInView={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.6, delay: idx * 0.1 }}\r\n              viewport={{ once: true }}\r\n            >\r\n              {santo.link ? (\r\n                <Link to={santo.link}>\r\n                  <OptimizedImage src={santo.image} alt={santo.name} height=\"300px\" hover />\r\n                  <SantoInfo>\r\n                    <h2>{santo.name}</h2>\r\n                    <p>{santo.description}</p>\r\n                  </SantoInfo>\r\n                </Link>\r\n              ) : (\r\n                <>\r\n                  <OptimizedImage src={santo.image} alt={santo.name} height=\"300px\" hover />\r\n                  <SantoInfo>\r\n                    <h2>{santo.name}</h2>\r\n                    <p>{santo.description}</p>\r\n                    <PlaceholderText>\r\n                      O nosso querido católico está trabalhando nisso ainda.\r\n                    </PlaceholderText>\r\n                  </SantoInfo>\r\n                </>\r\n              )}\r\n            </SantoCard>\r\n          ))}\r\n        </CardGrid>\r\n      </SantoContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Santos; "],"names":["_ref","title","description","keywords","image","getLogoPath","url","type","author","structuredData","breadcrumbs","article","saint","prayer","publishedTime","modifiedTime","category","tags","siteTitle","fullTitle","concat","allSchemas","length","map","item","index","name","join","about","birthDate","deathDate","birthPlace","nationality","canonizationDate","feastDay","patronOf","externalLinks","attributes","text","dateCreated","faqs","faq","question","answer","filter","Boolean","_jsxs","Helmet","children","_jsx","content","property","_Fragment","tag","rel","href","schema","JSON","stringify","ImageContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","height","borderRadius","theme","colors","borderColor","Image","img","_templateObject2","objectFit","objectPosition","loaded","PlaceholderContainer","_templateObject3","background","show","PlaceholderIcon","_templateObject4","textSecondary","ErrorContainer","_templateObject5","OptimizedImage","memo","_ref2","src","alt","width","placeholder","lazy","onLoad","onError","className","style","sizes","srcSet","_objectWithoutProperties","_excluded","setLoaded","useState","error","setError","imageRef","hasIntersected","options","arguments","undefined","isIntersecting","setIsIntersecting","setHasIntersected","elementRef","useRef","useEffect","element","current","observer","IntersectionObserver","entry","_objectSpread","threshold","rootMargin","observe","unobserve","useIntersectionObserver","shouldLoad","handleLoad","useCallback","e","handleError","document","createElement","onload","onerror","ref","loading","decoding","marginTop","fontSize","displayName","Card","surface","_props$theme$borderRa","lg","padding","variant","shadows","none","subtle","soft","medium","strong","shadow","maxWidth","hover","breakpoints","mobile","_props$theme$borderRa2","md","CardGrid","minWidth","gap","CardTitle","h3","primary","_props$theme$fontSize","_props$theme$fontSize2","CardText","p","_props$theme$fontSize3","_props$theme$fontSize4","sm","_templateObject6","_props$theme$borderRa3","_props$theme$borderRa4","_props$theme$borderRa5","_props$theme$borderRa6","santos","id","getSantoImagePath","link","PageContainer","PageTitle","h1","spacing","xxl","xl","secondary","SantoContainer","SantoCard","transitions","normal","SantoInfo","white","textLight","PlaceholderText","_templateObject7","Santos","SEO","santo","idx","isClickable","whileHover","y","initial","opacity","whileInView","transition","duration","delay","viewport","once","Link","to"],"sourceRoot":""}