{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\GitHub\\\\Apenas-um-Catolico\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App-debug';\n\n// Verificação de tipo para o elemento root\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\nif (!rootElement) {\n  throw new Error('Root element not found. Make sure you have a div with id=\"root\" in your index.html');\n}\nconst root = ReactDOM.createRoot(rootElement);\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this));\n\n// Registrar Service Worker\nif ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n  window.addEventListener('load', async () => {\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('SW registered successfully:', registration);\n\n      // Escutar atualizações do service worker\n      registration.addEventListener('updatefound', () => {\n        const newWorker = registration.installing;\n        if (newWorker) {\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              // Nova versão disponível\n              if (window.confirm('Nova versão disponível! Recarregar página?')) {\n                window.location.reload();\n              }\n            }\n          });\n        }\n      });\n\n      // Solicitar permissão para notificações\n      if ('Notification' in window && Notification.permission === 'default') {\n        await Notification.requestPermission();\n      }\n    } catch (error) {\n      console.log('SW registration failed:', error);\n    }\n  });\n}","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","jsxDEV","_jsxDEV","rootElement","document","getElementById","Error","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","navigator","process","env","NODE_ENV","window","addEventListener","registration","serviceWorker","register","console","log","newWorker","installing","state","controller","confirm","location","reload","Notification","permission","requestPermission","error"],"sources":["C:/Users/PC/Documents/GitHub/Apenas-um-Catolico/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App-debug';\r\n\r\n// Verificação de tipo para o elemento root\r\nconst rootElement = document.getElementById('root');\r\n\r\nif (!rootElement) {\r\n  throw new Error('Root element not found. Make sure you have a div with id=\"root\" in your index.html');\r\n}\r\n\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// Registrar Service Worker\r\nif ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\r\n  window.addEventListener('load', async () => {\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      console.log('SW registered successfully:', registration);\r\n      \r\n      // Escutar atualizações do service worker\r\n      registration.addEventListener('updatefound', () => {\r\n        const newWorker = registration.installing;\r\n        if (newWorker) {\r\n          newWorker.addEventListener('statechange', () => {\r\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\r\n              // Nova versão disponível\r\n              if (window.confirm('Nova versão disponível! Recarregar página?')) {\r\n                window.location.reload();\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Solicitar permissão para notificações\r\n      if ('Notification' in window && Notification.permission === 'default') {\r\n        await Notification.requestPermission();\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log('SW registration failed:', error);\r\n    }\r\n  });\r\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,GAAG,MAAM,aAAa;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAEnD,IAAI,CAACF,WAAW,EAAE;EAChB,MAAM,IAAIG,KAAK,CAAC,oFAAoF,CAAC;AACvG;AAEA,MAAMC,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACL,WAAW,CAAC;AAE7CI,IAAI,CAACE,MAAM,cACTP,OAAA,CAACL,KAAK,CAACa,UAAU;EAAAC,QAAA,eACfT,OAAA,CAACH,aAAa;IAAAY,QAAA,eACZT,OAAA,CAACF,GAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;;AAED;AACA,IAAI,eAAe,IAAIC,SAAS,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzEC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,YAAY;IAC1C,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMN,SAAS,CAACO,aAAa,CAACC,QAAQ,CAAC,QAAQ,CAAC;MACrEC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,YAAY,CAAC;;MAExD;MACAA,YAAY,CAACD,gBAAgB,CAAC,aAAa,EAAE,MAAM;QACjD,MAAMM,SAAS,GAAGL,YAAY,CAACM,UAAU;QACzC,IAAID,SAAS,EAAE;UACbA,SAAS,CAACN,gBAAgB,CAAC,aAAa,EAAE,MAAM;YAC9C,IAAIM,SAAS,CAACE,KAAK,KAAK,WAAW,IAAIb,SAAS,CAACO,aAAa,CAACO,UAAU,EAAE;cACzE;cACA,IAAIV,MAAM,CAACW,OAAO,CAAC,4CAA4C,CAAC,EAAE;gBAChEX,MAAM,CAACY,QAAQ,CAACC,MAAM,CAAC,CAAC;cAC1B;YACF;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;;MAEF;MACA,IAAI,cAAc,IAAIb,MAAM,IAAIc,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;QACrE,MAAMD,YAAY,CAACE,iBAAiB,CAAC,CAAC;MACxC;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEW,KAAK,CAAC;IAC/C;EACF,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}