{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst DEFAULT_OPTIONS = {\n  autoFocus: false,\n  trapFocus: false,\n  restoreOnUnmount: true,\n  announceChanges: true\n};\nexport const useAccessibility = (options = {}) => {\n  _s();\n  const opts = {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n\n  // State management\n  const [focusedElement, setFocusedElement] = useState(null);\n  const savedFocusRef = useRef(null);\n  const announcementRegionRef = useRef(null);\n\n  // Create announcement region for screen readers\n  useEffect(() => {\n    if (opts.announceChanges && !announcementRegionRef.current) {\n      const region = document.createElement('div');\n      region.setAttribute('aria-live', 'polite');\n      region.setAttribute('aria-atomic', 'true');\n      region.style.position = 'absolute';\n      region.style.left = '-10000px';\n      region.style.width = '1px';\n      region.style.height = '1px';\n      region.style.overflow = 'hidden';\n      document.body.appendChild(region);\n      announcementRegionRef.current = region;\n    }\n    return () => {\n      if (announcementRegionRef.current) {\n        document.body.removeChild(announcementRegionRef.current);\n        announcementRegionRef.current = null;\n      }\n    };\n  }, [opts.announceChanges]);\n\n  // Save current focus\n  const saveFocus = useCallback(() => {\n    savedFocusRef.current = document.activeElement;\n  }, []);\n\n  // Restore saved focus\n  const restoreFocus = useCallback(() => {\n    if (savedFocusRef.current && savedFocusRef.current.focus) {\n      try {\n        savedFocusRef.current.focus();\n      } catch (error) {\n        console.warn('Failed to restore focus:', error);\n      }\n    }\n  }, []);\n\n  // Focus trap implementation\n  const trapFocus = useCallback(container => {\n    if (!container) return () => {};\n    const focusableElements = container.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n    const firstElement = focusableElements[0];\n    const lastElement = focusableElements[focusableElements.length - 1];\n    const handleKeyDown = e => {\n      if (e.key !== 'Tab') return;\n      if (e.shiftKey) {\n        if (document.activeElement === firstElement) {\n          e.preventDefault();\n          lastElement === null || lastElement === void 0 ? void 0 : lastElement.focus();\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          e.preventDefault();\n          firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus();\n        }\n      }\n    };\n    container.addEventListener('keydown', handleKeyDown);\n\n    // Focus first element initially\n    if (firstElement) {\n      firstElement.focus();\n    }\n    return () => {\n      container.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  // Screen reader announcements\n  const announce = useCallback((message, priority = 'polite') => {\n    if (!announcementRegionRef.current) return;\n    const region = announcementRegionRef.current;\n    region.setAttribute('aria-live', priority);\n\n    // Clear and then set message to ensure it's announced\n    region.textContent = '';\n    setTimeout(() => {\n      region.textContent = message;\n    }, 100);\n  }, []);\n\n  // Keyboard navigation handler - returns a function to set up keyboard navigation\n  const useKeyboardNavigation = useCallback(() => {\n    // This function should be called by components that need keyboard navigation\n    // The actual useEffect should be implemented in the calling component\n  }, []);\n\n  // Skip to main content\n  const skipToContent = useCallback(() => {\n    const mainContent = document.querySelector('main, [role=\"main\"], #main-content');\n    if (mainContent) {\n      mainContent.focus();\n      mainContent.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n\n  // High contrast mode toggle\n  const setHighContrast = useCallback(enabled => {\n    const root = document.documentElement;\n    if (enabled) {\n      root.classList.add('high-contrast');\n    } else {\n      root.classList.remove('high-contrast');\n    }\n\n    // Store preference\n    localStorage.setItem('highContrast', enabled.toString());\n    announce(enabled ? 'Alto contraste ativado' : 'Alto contraste desativado');\n  }, [announce]);\n\n  // Reduced motion toggle\n  const setReducedMotion = useCallback(enabled => {\n    const root = document.documentElement;\n    if (enabled) {\n      root.classList.add('reduce-motion');\n    } else {\n      root.classList.remove('reduce-motion');\n    }\n\n    // Store preference\n    localStorage.setItem('reducedMotion', enabled.toString());\n    announce(enabled ? 'Animações reduzidas ativadas' : 'Animações normais ativadas');\n  }, [announce]);\n\n  // Font size adjustment\n  const setFontSize = useCallback(size => {\n    const root = document.documentElement;\n\n    // Remove existing font size classes\n    root.classList.remove('font-small', 'font-medium', 'font-large');\n\n    // Add new font size class\n    root.classList.add(`font-${size}`);\n\n    // Store preference\n    localStorage.setItem('fontSize', size);\n    const sizeLabels = {\n      small: 'pequena',\n      medium: 'média',\n      large: 'grande'\n    };\n    announce(`Fonte ${sizeLabels[size]} ativada`);\n  }, [announce]);\n\n  // Track focused element\n  useEffect(() => {\n    const handleFocusChange = () => {\n      setFocusedElement(document.activeElement);\n    };\n    document.addEventListener('focusin', handleFocusChange);\n    document.addEventListener('focusout', handleFocusChange);\n    return () => {\n      document.removeEventListener('focusin', handleFocusChange);\n      document.removeEventListener('focusout', handleFocusChange);\n    };\n  }, []);\n\n  // Auto focus on mount\n  useEffect(() => {\n    if (opts.autoFocus) {\n      const firstFocusable = document.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      if (firstFocusable) {\n        firstFocusable.focus();\n      }\n    }\n  }, [opts.autoFocus]);\n\n  // Restore focus on unmount\n  useEffect(() => {\n    return () => {\n      if (opts.restoreOnUnmount) {\n        restoreFocus();\n      }\n    };\n  }, [opts.restoreOnUnmount, restoreFocus]);\n  return {\n    focusedElement,\n    saveFocus,\n    restoreFocus,\n    trapFocus,\n    announce,\n    useKeyboardNavigation,\n    skipToContent,\n    setHighContrast,\n    setReducedMotion,\n    setFontSize\n  };\n};\n_s(useAccessibility, \"S1jYAUzniFtS6s8RsiFwIJJmOi8=\");","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","DEFAULT_OPTIONS","autoFocus","trapFocus","restoreOnUnmount","announceChanges","useAccessibility","options","_s","opts","focusedElement","setFocusedElement","savedFocusRef","announcementRegionRef","current","region","document","createElement","setAttribute","style","position","left","width","height","overflow","body","appendChild","removeChild","saveFocus","activeElement","restoreFocus","focus","error","console","warn","container","focusableElements","querySelectorAll","firstElement","lastElement","length","handleKeyDown","e","key","shiftKey","preventDefault","addEventListener","removeEventListener","announce","message","priority","textContent","setTimeout","useKeyboardNavigation","skipToContent","mainContent","querySelector","scrollIntoView","behavior","setHighContrast","enabled","root","documentElement","classList","add","remove","localStorage","setItem","toString","setReducedMotion","setFontSize","size","sizeLabels","small","medium","large","handleFocusChange","firstFocusable"],"sources":["C:/Users/PC/Documents/GitHub/Apenas-um-Catolico/src/hooks/useAccessibility.ts"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { UseAccessibilityOptions, UseAccessibilityReturn } from '../types';\r\n\r\nconst DEFAULT_OPTIONS: UseAccessibilityOptions = {\r\n  autoFocus: false,\r\n  trapFocus: false,\r\n  restoreOnUnmount: true,\r\n  announceChanges: true\r\n};\r\n\r\nexport const useAccessibility = (options: UseAccessibilityOptions = {}): UseAccessibilityReturn => {\r\n  const opts = { ...DEFAULT_OPTIONS, ...options };\r\n  \r\n  // State management\r\n  const [focusedElement, setFocusedElement] = useState<HTMLElement | null>(null);\r\n  const savedFocusRef = useRef<HTMLElement | null>(null);\r\n  const announcementRegionRef = useRef<HTMLElement | null>(null);\r\n\r\n  // Create announcement region for screen readers\r\n  useEffect(() => {\r\n    if (opts.announceChanges && !announcementRegionRef.current) {\r\n      const region = document.createElement('div');\r\n      region.setAttribute('aria-live', 'polite');\r\n      region.setAttribute('aria-atomic', 'true');\r\n      region.style.position = 'absolute';\r\n      region.style.left = '-10000px';\r\n      region.style.width = '1px';\r\n      region.style.height = '1px';\r\n      region.style.overflow = 'hidden';\r\n      document.body.appendChild(region);\r\n      announcementRegionRef.current = region;\r\n    }\r\n\r\n    return () => {\r\n      if (announcementRegionRef.current) {\r\n        document.body.removeChild(announcementRegionRef.current);\r\n        announcementRegionRef.current = null;\r\n      }\r\n    };\r\n  }, [opts.announceChanges]);\r\n\r\n  // Save current focus\r\n  const saveFocus = useCallback((): void => {\r\n    savedFocusRef.current = document.activeElement as HTMLElement;\r\n  }, []);\r\n\r\n  // Restore saved focus\r\n  const restoreFocus = useCallback((): void => {\r\n    if (savedFocusRef.current && savedFocusRef.current.focus) {\r\n      try {\r\n        savedFocusRef.current.focus();\r\n      } catch (error) {\r\n        console.warn('Failed to restore focus:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Focus trap implementation\r\n  const trapFocus = useCallback((container: HTMLElement): (() => void) => {\r\n    if (!container) return () => {};\r\n\r\n    const focusableElements = container.querySelectorAll(\r\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n    ) as NodeListOf<HTMLElement>;\r\n\r\n    const firstElement = focusableElements[0];\r\n    const lastElement = focusableElements[focusableElements.length - 1];\r\n\r\n    const handleKeyDown = (e: KeyboardEvent): void => {\r\n      if (e.key !== 'Tab') return;\r\n\r\n      if (e.shiftKey) {\r\n        if (document.activeElement === firstElement) {\r\n          e.preventDefault();\r\n          lastElement?.focus();\r\n        }\r\n      } else {\r\n        if (document.activeElement === lastElement) {\r\n          e.preventDefault();\r\n          firstElement?.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    container.addEventListener('keydown', handleKeyDown);\r\n    \r\n    // Focus first element initially\r\n    if (firstElement) {\r\n      firstElement.focus();\r\n    }\r\n\r\n    return () => {\r\n      container.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  // Screen reader announcements\r\n  const announce = useCallback((message: string, priority: 'polite' | 'assertive' = 'polite'): void => {\r\n    if (!announcementRegionRef.current) return;\r\n\r\n    const region = announcementRegionRef.current;\r\n    region.setAttribute('aria-live', priority);\r\n    \r\n    // Clear and then set message to ensure it's announced\r\n    region.textContent = '';\r\n    setTimeout(() => {\r\n      region.textContent = message;\r\n    }, 100);\r\n  }, []);\r\n\r\n  // Keyboard navigation handler - returns a function to set up keyboard navigation\r\n  const useKeyboardNavigation = useCallback((): void => {\r\n    // This function should be called by components that need keyboard navigation\r\n    // The actual useEffect should be implemented in the calling component\r\n  }, []);\r\n\r\n\r\n\r\n  // Skip to main content\r\n  const skipToContent = useCallback((): void => {\r\n    const mainContent = document.querySelector('main, [role=\"main\"], #main-content') as HTMLElement;\r\n    if (mainContent) {\r\n      mainContent.focus();\r\n      mainContent.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, []);\r\n\r\n  // High contrast mode toggle\r\n  const setHighContrast = useCallback((enabled: boolean): void => {\r\n    const root = document.documentElement;\r\n    if (enabled) {\r\n      root.classList.add('high-contrast');\r\n    } else {\r\n      root.classList.remove('high-contrast');\r\n    }\r\n    \r\n    // Store preference\r\n    localStorage.setItem('highContrast', enabled.toString());\r\n    announce(enabled ? 'Alto contraste ativado' : 'Alto contraste desativado');\r\n  }, [announce]);\r\n\r\n  // Reduced motion toggle\r\n  const setReducedMotion = useCallback((enabled: boolean): void => {\r\n    const root = document.documentElement;\r\n    if (enabled) {\r\n      root.classList.add('reduce-motion');\r\n    } else {\r\n      root.classList.remove('reduce-motion');\r\n    }\r\n    \r\n    // Store preference\r\n    localStorage.setItem('reducedMotion', enabled.toString());\r\n    announce(enabled ? 'Animações reduzidas ativadas' : 'Animações normais ativadas');\r\n  }, [announce]);\r\n\r\n  // Font size adjustment\r\n  const setFontSize = useCallback((size: 'small' | 'medium' | 'large'): void => {\r\n    const root = document.documentElement;\r\n    \r\n    // Remove existing font size classes\r\n    root.classList.remove('font-small', 'font-medium', 'font-large');\r\n    \r\n    // Add new font size class\r\n    root.classList.add(`font-${size}`);\r\n    \r\n    // Store preference\r\n    localStorage.setItem('fontSize', size);\r\n    \r\n    const sizeLabels = {\r\n      small: 'pequena',\r\n      medium: 'média',\r\n      large: 'grande'\r\n    };\r\n    \r\n    announce(`Fonte ${sizeLabels[size]} ativada`);\r\n  }, [announce]);\r\n\r\n  // Track focused element\r\n  useEffect(() => {\r\n    const handleFocusChange = (): void => {\r\n      setFocusedElement(document.activeElement as HTMLElement);\r\n    };\r\n\r\n    document.addEventListener('focusin', handleFocusChange);\r\n    document.addEventListener('focusout', handleFocusChange);\r\n\r\n    return () => {\r\n      document.removeEventListener('focusin', handleFocusChange);\r\n      document.removeEventListener('focusout', handleFocusChange);\r\n    };\r\n  }, []);\r\n\r\n  // Auto focus on mount\r\n  useEffect(() => {\r\n    if (opts.autoFocus) {\r\n      const firstFocusable = document.querySelector(\r\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n      ) as HTMLElement;\r\n      \r\n      if (firstFocusable) {\r\n        firstFocusable.focus();\r\n      }\r\n    }\r\n  }, [opts.autoFocus]);\r\n\r\n  // Restore focus on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (opts.restoreOnUnmount) {\r\n        restoreFocus();\r\n      }\r\n    };\r\n  }, [opts.restoreOnUnmount, restoreFocus]);\r\n\r\n  return {\r\n    focusedElement,\r\n    saveFocus,\r\n    restoreFocus,\r\n    trapFocus,\r\n    announce,\r\n    useKeyboardNavigation,\r\n    skipToContent,\r\n    setHighContrast,\r\n    setReducedMotion,\r\n    setFontSize\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}