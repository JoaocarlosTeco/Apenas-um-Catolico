{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useDeviceType = () => {\n  _s();\n  const [deviceType, setDeviceType] = useState({\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true\n  });\n  useEffect(() => {\n    const checkDeviceType = () => {\n      if (typeof window === 'undefined') {\n        // SSR safe default\n        setDeviceType({\n          isMobile: false,\n          isTablet: false,\n          isDesktop: true\n        });\n        return;\n      }\n      const width = window.innerWidth;\n      const isMobile = width < 768;\n      const isTablet = width >= 768 && width < 1024;\n      const isDesktop = width >= 1024;\n      setDeviceType({\n        isMobile,\n        isTablet,\n        isDesktop\n      });\n    };\n\n    // Check on mount\n    checkDeviceType();\n\n    // Add event listener for resize\n    window.addEventListener('resize', checkDeviceType);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', checkDeviceType);\n    };\n  }, []);\n  return deviceType;\n};\n_s(useDeviceType, \"Xiwu1W/ysWxANkIZIT8+W0jbm8w=\");\nexport default useDeviceType;","map":{"version":3,"names":["useState","useEffect","useDeviceType","_s","deviceType","setDeviceType","isMobile","isTablet","isDesktop","checkDeviceType","window","width","innerWidth","addEventListener","removeEventListener"],"sources":["C:/Users/PC/Documents/GitHub/Apenas-um-Catolico/src/components/useDeviceType.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { DeviceType } from '../types';\r\n\r\nconst useDeviceType = (): DeviceType => {\r\n  const [deviceType, setDeviceType] = useState<DeviceType>({\r\n    isMobile: false,\r\n    isTablet: false,\r\n    isDesktop: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkDeviceType = (): void => {\r\n      if (typeof window === 'undefined') {\r\n        // SSR safe default\r\n        setDeviceType({\r\n          isMobile: false,\r\n          isTablet: false,\r\n          isDesktop: true\r\n        });\r\n        return;\r\n      }\r\n\r\n      const width = window.innerWidth;\r\n      const isMobile = width < 768;\r\n      const isTablet = width >= 768 && width < 1024;\r\n      const isDesktop = width >= 1024;\r\n\r\n      setDeviceType({\r\n        isMobile,\r\n        isTablet,\r\n        isDesktop\r\n      });\r\n    };\r\n\r\n    // Check on mount\r\n    checkDeviceType();\r\n\r\n    // Add event listener for resize\r\n    window.addEventListener('resize', checkDeviceType);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', checkDeviceType);\r\n    };\r\n  }, []);\r\n\r\n  return deviceType;\r\n};\r\n\r\nexport default useDeviceType; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,MAAMC,aAAa,GAAGA,CAAA,KAAkB;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAa;IACvDM,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFP,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAGA,CAAA,KAAY;MAClC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;QACjC;QACAL,aAAa,CAAC;UACZC,QAAQ,EAAE,KAAK;UACfC,QAAQ,EAAE,KAAK;UACfC,SAAS,EAAE;QACb,CAAC,CAAC;QACF;MACF;MAEA,MAAMG,KAAK,GAAGD,MAAM,CAACE,UAAU;MAC/B,MAAMN,QAAQ,GAAGK,KAAK,GAAG,GAAG;MAC5B,MAAMJ,QAAQ,GAAGI,KAAK,IAAI,GAAG,IAAIA,KAAK,GAAG,IAAI;MAC7C,MAAMH,SAAS,GAAGG,KAAK,IAAI,IAAI;MAE/BN,aAAa,CAAC;QACZC,QAAQ;QACRC,QAAQ;QACRC;MACF,CAAC,CAAC;IACJ,CAAC;;IAED;IACAC,eAAe,CAAC,CAAC;;IAEjB;IACAC,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,eAAe,CAAC;;IAElD;IACA,OAAO,MAAM;MACXC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEL,eAAe,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,UAAU;AACnB,CAAC;AAACD,EAAA,CA5CID,aAAa;AA8CnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}